// Test pour v√©rifier la configuration email sur Render
const fetch = require('node-fetch');

const API_URL = 'https://my-backend-api-cng7.onrender.com';
const testEmail = 'akramhimmich21@gmail.com';

async function testRenderEmailConfig() {
  console.log('üîç TEST CONFIGURATION EMAIL SUR RENDER');
  console.log('=========================================\n');

  // 1. V√©rifier la configuration
  console.log('1Ô∏è‚É£ V√©rification des variables d\'environnement sur Render...');
  try {
    const configResponse = await fetch(`${API_URL}/api/auth/test-email-config`);

    if (!configResponse.ok) {
      console.log('‚ùå Route test-email-config non disponible');
      console.log('   Le nouveau code n\'est peut-√™tre pas encore d√©ploy√©');
      console.log('   Attendez 2-3 minutes et r√©essayez');
    } else {
      const config = await configResponse.json();
      console.log('üìß Configuration sur Render:');
      console.log('   - Configur√©:', config.configured ? '‚úÖ OUI' : '‚ùå NON');
      console.log('   - Host:', config.host);
      console.log('   - User:', config.user);
      console.log('   - Password d√©fini:', config.passSet ? '‚úÖ OUI' : '‚ùå NON');

      if (!config.configured) {
        console.log('\n‚ö†Ô∏è  PROBL√àME D√âTECT√â!');
        console.log('   Les variables EMAIL ne sont pas configur√©es sur Render!');
        console.log('\nüìù SOLUTION:');
        console.log('   1. Allez sur https://dashboard.render.com');
        console.log('   2. Trouvez votre service "my-backend-api"');
        console.log('   3. Allez dans "Environment" ‚Üí "Environment Variables"');
        console.log('   4. Ajoutez ces variables:');
        console.log('      EMAIL_HOST = smtp.gmail.com');
        console.log('      EMAIL_PORT = 587');
        console.log('      EMAIL_USER = lexiflow.contact@gmail.com');
        console.log('      EMAIL_PASS = ntmxvkzflvmumknt');
        console.log('   5. Cliquez "Save Changes"');
        console.log('   6. Attendez le red√©ploiement (5 minutes)');
        return;
      }
    }
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
  }

  console.log('\n2Ô∏è‚É£ Test d\'envoi direct via l\'API test...');
  try {
    const testResponse = await fetch(`${API_URL}/api/auth/test-email`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email: testEmail })
    });

    if (!testResponse.ok) {
      console.log('‚ùå Route test-email non disponible');
    } else {
      const result = await testResponse.json();
      console.log('‚úÖ R√©ponse:', result.message);
      console.log('   ‚Üí V√©rifiez votre email dans 30 secondes');
    }
  } catch (error) {
    console.log('‚ùå Erreur test email:', error.message);
  }

  console.log('\n3Ô∏è‚É£ Test forgot-password (le vrai)...');
  const startTime = Date.now();

  try {
    const response = await fetch(`${API_URL}/api/auth/forgot-password`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email: testEmail })
    });

    const elapsed = ((Date.now() - startTime) / 1000).toFixed(2);
    const data = await response.json();

    console.log(`‚úÖ R√©ponse en ${elapsed}s`);
    console.log('   Message:', data.message);

    if (elapsed < 5) {
      console.log('   üéâ RAPIDE! L\'envoi non-bloquant fonctionne!');
    } else {
      console.log('   ‚ö†Ô∏è  Encore lent, v√©rifier les logs Render');
    }

    console.log('\nüìß R√âSULTAT:');
    console.log('   Si vous recevez l\'email = Tout fonctionne!');
    console.log('   Si pas d\'email = Variables non configur√©es sur Render');

  } catch (error) {
    const elapsed = ((Date.now() - startTime) / 1000).toFixed(2);
    console.log(`‚ùå Erreur apr√®s ${elapsed}s:`, error.message);
  }

  console.log('\n=========================================');
  console.log('üìå CHECKLIST:');
  console.log('[ ] Variables EMAIL configur√©es sur Render?');
  console.log('[ ] Code red√©ploy√© (attendu 5 min)?');
  console.log('[ ] Email re√ßu dans Gmail?');
  console.log('[ ] V√©rifi√© le dossier SPAM?');
}

testRenderEmailConfig();